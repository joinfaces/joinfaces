plugins {
    id "io.freefair.git-version"
    id "io.freefair.aggregate-jacoco-report"
    id "io.freefair.lombok" apply false
    id "io.freefair.maven-central.validate-poms" apply false
    id "com.github.spotbugs" version "5.2.1" apply false
    id "de.aaschmid.cpd" version "3.3"
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

allprojects {
    group = 'org.joinfaces'

    plugins.withId("java") {
        apply plugin: "io.freefair.lombok"

        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(17)
            }

            withSourcesJar()
            withJavadocJar()
        }

        tasks.withType(JavaCompile).configureEach {
            options.encoding = 'UTF-8'
            options.compilerArgs << '-parameters'
        }

        tasks.withType(Test).configureEach {
            useJUnitPlatform()
        }

        plugins.withId("io.freefair.maven-publish-java") {
            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        versionMapping {
                            usage('java-api') {
                                fromResolutionOf('runtimeClasspath')
                            }
                            usage('java-runtime') {
                                fromResolutionResult()
                            }
                        }
                    }
                }
            }
        }

        afterEvaluate { p ->
            tasks.named('jar', Jar) {
                manifest {
                    attributes 'Implementation-Title': "$p.description",
                            'Implementation-Version': "$p.version",
                            'Implementation-Vendor': "JoinFaces"
                }
            }
        }
    }

    tasks.withType(Javadoc).configureEach {
        failOnError = false
    }

    plugins.withId("jacoco") {
        tasks.withType(JacocoReport).configureEach {
            reports.xml.required = true
        }
    }

    plugins.withId("maven-publish") {

        project.apply plugin: "signing"
        project.apply plugin: "io.freefair.maven-central.validate-poms"

        signing {
            required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }

            def signingKey = findProperty("signingKey")
            def signingPassword = findProperty("signingPassword")
            useInMemoryPgpKeys(signingKey, signingPassword)
        }

        publishing {
            publications.withType(MavenPublication) {
                pom {
                    url = provider { 'https://docs.joinfaces.org/' + project.version + '/reference/' }
                    name = provider { project.description }
                    description = provider { project.description }
                    inceptionYear = '2016'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    organization {
                        name = 'JoinFaces'
                        url = 'https://github.com/joinfaces'
                    }
                    developers {
                        developer {
                            id = 'persapiens'
                            name = 'Marcelo Romulo Fernandes'
                            email = 'persapiens@gmail.com'
                            timezone = '-3'
                        }
                        developer {
                            id = 'larsgrefer'
                            name = 'Lars Grefer'
                            email = 'github@larsgrefer.de'
                            timezone = 'Europe/Berlin'
                        }
                    }
                    ciManagement {
                        system = 'GitHub Actions'
                        url = 'https://github.com/joinfaces/joinfaces/actions'
                    }
                    issueManagement {
                        system = 'GitHub Issues'
                        url = 'https://github.com/joinfaces/joinfaces/issues'
                    }
                    scm {
                        connection = 'scm:git:https://github.com/joinfaces/joinfaces.git'
                        developerConnection = 'scm:git:git@github.com:joinfaces/joinfaces.git'
                        url = 'https://github.com/joinfaces/joinfaces/'
                    }
                }
            }
        }
    }
}

tasks.named("cpdCheck") {
    exclude "**/*Test.java"
    exclude "**/*IT.java"
}

apply plugin: "maven-publish"

nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = '9d2198adfd84d'
        }
    }
}
