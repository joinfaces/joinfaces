apply plugin: "java-library"
apply plugin: "com.github.spotbugs"
apply plugin: "checkstyle"
apply plugin: "pmd"
apply plugin: "jacoco"
apply plugin: "io.freefair.lombok"
apply plugin: "io.freefair.maven-optional"
apply plugin: "io.freefair.maven-publish-java"

description = 'JoinFaces AutoConfigure'
jar.manifest.attributes('Automatic-Module-Name': 'joinfaces.autoconfigure')

gradleLint.rules -= 'transitive-duplicate-dependency-class'

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'

    api 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'io.github.classgraph:classgraph'

    optional 'org.springframework.boot:spring-boot-starter'
    optional 'org.springframework:spring-web'
    optional 'org.springframework.boot:spring-boot-starter-tomcat'
    optional 'org.springframework.boot:spring-boot-starter-jetty'
    optional 'org.springframework.boot:spring-boot-starter-undertow'
    optional 'org.springframework.boot:spring-boot-starter-data-jpa'
    optional 'org.springframework.session:spring-session-core'
    optional('javax.enterprise:cdi-api') {
        exclude group: 'javax.el', module: 'javax.el-api'
    }
    optional('org.jboss.weld.servlet:weld-servlet-core') {
        exclude group: 'org.jboss.spec.javax.el', module: 'jboss-el-api_3.0_spec'
        exclude group: 'org.jboss.spec.javax.annotation', module: 'jboss-annotations-api_1.3_spec'
        exclude group: 'org.jboss.spec.javax.interceptor', module: 'jboss-interceptors-api_1.2_spec'
    }
    optional 'org.glassfish:jakarta.faces'
    optional('org.apache.myfaces.core:myfaces-impl') {
        exclude group: "commons-logging", module: "commons-logging"
    }
    optional 'org.omnifaces:omnifaces:1.14.1'
    optional 'org.primefaces:primefaces'
    optional('org.icefaces:icefaces') {
        exclude group: "org.glassfish", module: "javax.faces"
    }
    optional 'org.icefaces:icefaces-ace'
    optional 'net.bootsfaces:bootsfaces'
    optional('de.beyondjava:angularFaces-core') {
        exclude group: "commons-logging", module: "commons-logging"
    }
    optional 'org.butterfaces:components'
    optional 'org.richfaces:richfaces-a4j'
    optional 'org.richfaces:richfaces'
    optional 'commons-fileupload:commons-fileupload'
    optional 'org.ocpsoft.rewrite:rewrite-servlet'
    optional 'org.ocpsoft.rewrite:rewrite-integration-spring'
    optional 'org.glassfish.jaxb:jaxb-runtime'
    optional 'javax.activation:javax.activation-api'

    optional 'com.github.adminfaces:admin-template'
    optional 'com.github.adminfaces:admin-theme'
    optional 'jakarta.ejb:jakarta.ejb-api'

    optional 'org.apache.myfaces.tobago:tobago-core'
    optional 'org.apache.myfaces.tobago:tobago-theme-standard'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation project(':joinfaces-test')
    testImplementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.ocpsoft.logging:logging-adapter-slf4j'
}

compileJava.dependsOn(processResources)

test {
    include "**/*Test.class"
}

configurations {
    mojarraIntegTestRuntime
    myfacesIntegTestRuntime

    mojarraIntegTestRuntime.extendsFrom testRuntimeClasspath
    myfacesIntegTestRuntime.extendsFrom testRuntimeClasspath

    mojarraIntegTestRuntime.exclude group: 'org.apache.myfaces.core'
    myfacesIntegTestRuntime.exclude group: 'org.glassfish', module: 'jakarta.faces'
}

task mojarraIntegTest(type: Test) {
    include "**/*IT.class"
    exclude "**/myfaces/**.class"
    classpath = configurations.mojarraIntegTestRuntime + sourceSets.main.output + sourceSets.test.output
    shouldRunAfter test
}

task myfacesIntegTest(type: Test) {
    include "**/*IT.class"
    exclude "**/mojarra/**.class"
    classpath = configurations.myfacesIntegTestRuntime + sourceSets.main.output + sourceSets.test.output
    shouldRunAfter test
}

check.dependsOn mojarraIntegTest
check.dependsOn myfacesIntegTest

jacocoTestReport.executionData mojarraIntegTest, myfacesIntegTest
